Преобразование типов
1) Неявное
Привер:
int i = 10;
double s = i;

2) Явное
Пример:
для итерирования вектора:
Способ 1
for(int i = 0; i < (int)v.size(); i++)
{
    ...
}
Способ 2
for(int i = 0; i < static_cast<int>(v.size()); i++)
{
    ...
}
таким образом, оно бывает двух типов:
C style) (тип)значение, тип(значение)
C++ style) четыре оператора: const_cast, static_cast, dynamic_cast, reinterpret_cast, (bit_cast)
!!не гарантирует отсутствие потери точности (памяти)!!

const_cast:
- нужен, чтобы снимать или добавлять константность

static_cast:
- выполняется на этапе компиляции (в отличие от dynamic_cast)
(если это невозможно, код не скомпилируется)
- не гарантирует отсутствие потери точности

dynamic_cast:
- преобразование от типа класса предка в наследника и наоборот
(в случае с предок в наследник и неиниц. полями, вернет nullptr)

reinterpret_cast
- самый сумасшедший :)
- может поломать память программы
